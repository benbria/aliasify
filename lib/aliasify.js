// Generated by CoffeeScript 1.6.3
(function() {
  var ALLOWED_EXTENSIONS, getReplacement, path, transformTools;

  path = require('path');

  transformTools = require('browserify-transform-tools');

  ALLOWED_EXTENSIONS = [".js", ".coffee", ".coffee.md", ".litcoffee", "._js", "._coffee"];

  getReplacement = function(file, aliases) {
    var fileParts, pkg;
    if (aliases[file]) {
      return aliases[file];
    } else {
      fileParts = /^([^\/]*)(\/.*)$/.exec(file);
      pkg = aliases[fileParts != null ? fileParts[1] : void 0];
      if (pkg != null) {
        return pkg + fileParts[2];
      }
    }
    return null;
  };

  module.exports = transformTools.makeRequireTransform("aliasify", {
    includeExtensions: ALLOWED_EXTENSIONS
  }, function(args, opts, done) {
    var aliases, configDir, file, fileDir, replacement, result, verbose, _ref;
    if (!opts.config) {
      return done(new Error("Could not find configuration for aliasify"));
    }
    aliases = opts.config.aliases;
    verbose = opts.config.verbose;
    configDir = ((_ref = opts.configData) != null ? _ref.configDir : void 0) || opts.config.configDir || process.cwd();
    result = null;
    file = args[0];
    if ((file != null) && (aliases != null)) {
      replacement = getReplacement(file, aliases);
      if (replacement != null) {
        if (/^\./.test(replacement)) {
          replacement = path.resolve(configDir, replacement);
          fileDir = path.dirname(opts.file);
          replacement = path.join(".", (path.relative(fileDir, replacement)));
          if (path.sep == '\\') replacement = replacement.replace(/\\/g, '/');
        }
        if (verbose) {
          console.log("aliasify - " + opts.file + ": replacing " + args[0] + " with " + replacement);
        }
        result = "require('" + (replacement.replace(/\\/gi, "/")) + "')";
      }
    }
    return done(null, result);
  });

}).call(this);
